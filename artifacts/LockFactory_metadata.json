{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "token_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "numReleaseDays_",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "address_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "numTokens",
						"type": "uint256"
					}
				],
				"name": "addLock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "address_",
						"type": "address"
					}
				],
				"name": "getLock",
				"outputs": [
					{
						"internalType": "contract LockToken",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getLock(address)": {
					"returns": {
						"_0": "the lock contract for a given benificiary"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addLock(address,uint256)": {
					"notice": "create a new lock contract with address_ as the benificiary"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"elysios/LockFactory.sol": "LockFactory"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"elysios/Address.sol": {
			"keccak256": "0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c",
			"license": "MIT",
			"urls": [
				"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb",
				"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC"
			]
		},
		"elysios/Context.sol": {
			"keccak256": "0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5",
			"license": "MIT",
			"urls": [
				"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85",
				"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC"
			]
		},
		"elysios/IERC20.sol": {
			"keccak256": "0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a",
			"license": "MIT",
			"urls": [
				"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14",
				"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL"
			]
		},
		"elysios/Lock.sol": {
			"keccak256": "0x67a1ae797d30f363cbfb38e3ec7048567848a720f034992da136ceb8093440d0",
			"license": "MIT",
			"urls": [
				"bzz-raw://8f5c2d89668a757993b9d6646bf401e27dcdf4e12383de3ce8bd1fe6a5545bcb",
				"dweb:/ipfs/QmTXkZJQ1K6kgPohgVCXDvPsXkubKa8yqFaCDHKrqYbRoN"
			]
		},
		"elysios/LockFactory.sol": {
			"keccak256": "0xbbe9ba688c1f1e71687976d5b795a9db2c6c5bb7279ab6a03eb3e0e76aed2a0e",
			"license": "MIT",
			"urls": [
				"bzz-raw://38ac096010120f1651dd3c24e86dd4c8c905e28bfa8e9c09b83793dfb207c5c4",
				"dweb:/ipfs/QmdA4wiJy9fokXGbJD8z5MBa2GrHsvdPdRu4D988TzLaP5"
			]
		},
		"elysios/Ownable.sol": {
			"keccak256": "0x75d1e6250c190ca0500e5a2b7def5e5d6fd3edbe368a6de93dea256471d04593",
			"license": "MIT",
			"urls": [
				"bzz-raw://09b8acacbbc0353985940f90022a8e15d15d9767e1eeaa721e1e21655c34c62e",
				"dweb:/ipfs/Qmeb2CejPutKdfNpncsRny8cibhF7aVMJpR6ZvMYruDWLM"
			]
		},
		"elysios/SafeERC20.sol": {
			"keccak256": "0x5a84941e8ac9bf14e8645a519242a62af5da41357582141ca80f55fb04d49ea8",
			"license": "MIT",
			"urls": [
				"bzz-raw://858f1e84883304ef309ef6efe8119b68b7fe252e63580b36f365f90bef7772b5",
				"dweb:/ipfs/QmWx9K9GcsvdjusZgAPR5SwcPSc8robSpPGcApDRsTzeEi"
			]
		}
	},
	"version": 1
}